// Generated by CoffeeScript 1.4.0
var interacData, locker;

locker = $('.locker-container');

interacData = new ((function() {

  function _Class() {}

  _Class.prototype.dial = null;

  _Class.prototype.mouseDown = false;

  _Class.prototype.angle = 0;

  _Class.prototype.factor = 2;

  _Class.prototype.whichDial = function() {
    return this.dial;
  };

  _Class.prototype.setDial = function(dial) {
    this.dial = dial;
  };

  _Class.prototype.rotateToLeft = function() {
    this.angle = this.angle - this.factor;
    console.log(this.angle, this.factor);
    return this.dial.css({
      '-webkit-transform': "rotate(" + this.angle + "deg)",
      '-moz-transform': "rotate(" + this.angle + "deg)",
      '-ms-transform': "rotate(" + this.angle + "deg)",
      'transform': "rotate(" + this.angle + "deg)"
    });
  };

  _Class.prototype.rotateToRight = function() {
    this.angle = this.angle + this.factor;
    console.log(this.angle, this.factor);
    return this.dial.css({
      '-webkit-transform': "rotate(" + this.angle + "deg)",
      '-moz-transform': "rotate(" + this.angle + "deg)",
      '-ms-transform': "rotate(" + this.angle + "deg)",
      'transform': "rotate(" + this.angle + "deg)"
    });
  };

  return _Class;

})());

locker.on('mousedown', function(ev) {
  var lastKnown, _this;
  ev.preventDefault();
  _this = this;
  lastKnown = null;
  interacData.setDial($(this));
  interacData.mouseDown = true;
  return $(document).on('mousemove', function(e) {
    e.preventDefault();
    if (lastKnown) {
      if (e.pageX < lastKnown.x) {
        interacData.rotateToLeft();
      } else {
        interacData.rotateToRight();
      }
    }
    return lastKnown = {
      x: e.pageX
    };
  });
});

$(document).on('mouseup', function(e) {
  e.preventDefault();
  interacData.setDial(null);
  interacData.mouseDown = false;
  return $(document).off('mousemove');
});
